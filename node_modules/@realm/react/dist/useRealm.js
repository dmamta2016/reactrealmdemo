import { useContext } from "react";
/**
 * Generates a `useRealm` hook given a RealmContext.  This allows access to the {@link Realm}
 * instance anywhere within the RealmProvider.
 *
 * @param RealmContext - The context containing the {@link Realm} instance
 * @returns useRealm - Hook that is used to gain access to the {@link Realm} instance
 */
export const createUseRealm = (RealmContext) => {
    /**
     * Returns the instance of the {@link Realm} configured by `createRealmContext`
     *
     * @example
     * ```
     * const realm = useRealm();
     * ```
     *
     * @returns a realm instance
     */
    return function useRealm() {
        // This is the context setup by `createRealmContext`
        const context = useContext(RealmContext);
        if (context === null) {
            throw new Error("Realm context not found.  Did you call useRealm() within a <RealmProvider/>?");
        }
        return context;
    };
};
//# sourceMappingURL=useRealm.js.map