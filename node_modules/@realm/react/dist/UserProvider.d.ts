import React from "react";
declare type UserProviderProps = {
    fallback?: React.ComponentType<unknown> | React.ReactElement | null | undefined;
    children: React.ReactNode;
};
/**
 * React component providing a Realm user on the context for the sync hooks
 * to use. A `UserProvider` is required for an app to use the hooks.
 */
export declare const UserProvider: React.FC<UserProviderProps>;
/**
 * Hook to access the currently authenticated Realm user from the
 * {@link UserProvider} context. The user is stored as React state,
 * so will trigger a re-render whenever it changes (e.g. logging in,
 * logging out, switching user).
 *
 */
export declare const useUser: <FunctionsFactoryType extends Realm.DefaultFunctionsFactory, CustomDataType extends SimpleObject, UserProfileDataType extends Realm.DefaultUserProfileData>() => Realm.User<FunctionsFactoryType, CustomDataType, UserProfileDataType> | null;
export {};
//# sourceMappingURL=UserProvider.d.ts.map