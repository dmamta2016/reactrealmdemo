import React from "react";
import Realm from "realm";
/**
 * Props for the AppProvider component. These replicate the options which
 * can be used to create a Realm.App instance:
 * https://www.mongodb.com/docs/realm-sdks/js/latest/Realm.App.html#~AppConfiguration
 */
declare type AppProviderProps = Realm.AppConfiguration & {
    children: React.ReactNode;
    appRef?: React.MutableRefObject<Realm.App | null>;
};
/**
 * React component providing a Realm App instance on the context for the
 * sync hooks to use. An `AppProvider` is required for an app to use the hooks.
 */
export declare const AppProvider: React.FC<AppProviderProps>;
/**
 * Hook to access the current {@link Realm.App} from the {@link AppProvider} context.
 *
 * @throws if an AppProvider does not exist in the componentâ€™s ancestors
 */
export declare const useApp: <FunctionsFactoryType extends Realm.DefaultFunctionsFactory, CustomDataType extends SimpleObject>() => Realm.App<FunctionsFactoryType, CustomDataType>;
export {};
//# sourceMappingURL=AppProvider.d.ts.map